// This is a basic example of using the ray casting function

//////////////////////////////////////////////
HTML
//////////////////////////////////////////////

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
    </head>
    <body style="background-color: darkorange;">
        <script src="engine/vector2.js"></script>
        <script src="engine/mainLib.js"></script>
        <script src="engine/mapLib.js"></script>
        <script src="engine/guiLib.js"></script>
        <script src="engine/controlsLib.js"></script>
        <script src="index.js"></script>
    </body>
</html>

//////////////////////////////////////////////
JavaScript
//////////////////////////////////////////////

//////////////////////////////////////////////
//              GAME AREA SETUP             //
//////////////////////////////////////////////

AppendCanvas("2d");
GameSize(800, 600);
game.style.right    = "41px";
game.style.top      = "15px";
game.style.position = "absolute";

//////////////////////////////////////////////
//            GLOBAL VARS/FUNCS             //
//////////////////////////////////////////////

const ray  = new Ray(100, 200, 1, 0);
const wall = new Boundary(300, 100, 300, 300);

let pp = new vector2(0, 0),
    ps = new vector2(3, 3),
    pv = new vector2(0, 0),
    pa = new vector2(0, 0),
    pg = new vector2(0, 0);

const point = new Entity(pp, ps, pv, pa, pg, "circle");
point.c     = rgba(150, 50, 50, 1.0);

//////////////////////////////////////////////
//                GAME LOOP                 //
//////////////////////////////////////////////

window.onload = new RecurringTimer(function(){
    Background("Black");
    wall.render();
    ray.render();
    ray.setDirection(mouseX, mouseY);

    let pt = ray.cast(wall);

    if(pt){
        point.x = pt.x;
        point.y = pt.y;

        point.render();
    }else{ return }
}, 0);
